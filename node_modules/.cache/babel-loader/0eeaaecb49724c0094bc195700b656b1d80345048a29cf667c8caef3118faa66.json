{"ast":null,"code":"var _jsxFileName = \"/Users/gwonsunseong/Desktop/Projects/react-project/side-project(Solo)/CardLog-FE/src/components/common/SideBar/index.tsx\";\n/** @jsxImportSource @emotion/react */\n\nimport React from \"react\";\nimport { sideBarStyle } from \"../../../styles/components/SideBar\";\nimport { NavLink } from \"react-router-dom\";\nimport RouterInfo from \"../../routes/RouterInfo\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nconst SideBar = () => {\n  return _jsxDEV(\"article\", {\n    css: sideBarStyle,\n    children: _jsxDEV(\"nav\", {\n      children: Object.entries(RouterInfo).map(_ref => {\n        let [key, item] = _ref;\n        return item.isShowNav && _jsxDEV(NavLink, {\n          to: item.path,\n          children: item.label\n        }, item.path, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = SideBar;\nexport default SideBar;\nvar _c;\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"names":["React","sideBarStyle","NavLink","RouterInfo","SideBar","Object","entries","map","key","item","isShowNav","path","label"],"sources":["/Users/gwonsunseong/Desktop/Projects/react-project/side-project(Solo)/CardLog-FE/src/components/common/SideBar/index.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\n\nimport React, { useState } from \"react\";\nimport { sideBarStyle } from \"../../../styles/components/SideBar\";\nimport { NavLink } from \"react-router-dom\";\nimport RouterInfo, { RouterItem } from \"../../routes/RouterInfo\";\n\nconst SideBar: React.FC = (): JSX.Element => {\n  return (\n    <article css={sideBarStyle}>\n      <nav>\n        {Object.entries(RouterInfo).map(\n          ([key, item]: [string, RouterItem]) =>\n            item.isShowNav && (\n              <NavLink key={item.path} to={item.path}>\n                {item.label}\n              </NavLink>\n            )\n        )}\n      </nav>\n    </article>\n  );\n};\n\nexport default SideBar;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAoB,OAAO;AACvC,SAASC,YAAY,QAAQ,oCAAoC;AACjE,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAOC,UAAU,MAAsB,yBAAyB;AAAC;AAEjE,MAAMC,OAAiB,GAAG,MAAmB;EAC3C,OACE;IAAS,GAAG,EAAEH,YAAa;IAAA,UACzB;MAAA,UACGI,MAAM,CAACC,OAAO,CAACH,UAAU,CAAC,CAACI,GAAG,CAC7B;QAAA,IAAC,CAACC,GAAG,EAAEC,IAAI,CAAuB;QAAA,OAChCA,IAAI,CAACC,SAAS,IACZ,QAAC,OAAO;UAAiB,EAAE,EAAED,IAAI,CAACE,IAAK;UAAA,UACpCF,IAAI,CAACG;QAAK,GADCH,IAAI,CAACE,IAAI;UAAA;UAAA;UAAA;QAAA,QAGxB;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACE;AAEd,CAAC;AAAC,KAfIP,OAAiB;AAiBvB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}