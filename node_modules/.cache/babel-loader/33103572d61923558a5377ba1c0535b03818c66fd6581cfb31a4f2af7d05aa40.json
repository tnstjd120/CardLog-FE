{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport RouterInfo from \"../components/routes/RouterInfo\";\nexport const useHasNav = path => {\n  _s();\n  const pathArr = path.split(\"/\");\n  const [hasNav, setHasNav] = useState(true);\n  if (pathArr.length > 2) {\n    console.log(pathArr);\n    return true;\n  }\n  return hasNav;\n};\n_s(useHasNav, \"KzlW6foxkuo9qx6m8cE0MJPRdwY=\");\nconst handleCheckPath = path => {\n  for (let [key, value] of Object.entries(RouterInfo)) {\n    if (value.path === path) {\n      return true;\n    }\n  }\n};","map":{"version":3,"names":["useState","RouterInfo","useHasNav","path","pathArr","split","hasNav","setHasNav","length","console","log","handleCheckPath","key","value","Object","entries"],"sources":["/Users/gwonsunseong/Desktop/Projects/react-project/side-project(Solo)/CardLog-FE/src/hooks/useHasNav.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport RouterInfo from \"../components/routes/RouterInfo\";\n\nexport const useHasNav = (path: string): boolean => {\n  const pathArr = path.split(\"/\");\n\n  const [hasNav, setHasNav] = useState<boolean>(true);\n\n  if (pathArr.length > 2) {\n    console.log(pathArr);\n    return true;\n  }\n\n  return hasNav;\n};\n\nconst handleCheckPath = (path: string) => {\n  for (let [key, value] of Object.entries(RouterInfo)) {\n    if (value.path === path) {\n      return true;\n    }\n  }\n};\n"],"mappings":";AAAA,SAAoBA,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,iCAAiC;AAExD,OAAO,MAAMC,SAAS,GAAIC,IAAY,IAAc;EAAA;EAClD,MAAMC,OAAO,GAAGD,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC;EAE/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAU,IAAI,CAAC;EAEnD,IAAII,OAAO,CAACI,MAAM,GAAG,CAAC,EAAE;IACtBC,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;IACpB,OAAO,IAAI;EACb;EAEA,OAAOE,MAAM;AACf,CAAC;AAAC,GAXWJ,SAAS;AAatB,MAAMS,eAAe,GAAIR,IAAY,IAAK;EACxC,KAAK,IAAI,CAACS,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACd,UAAU,CAAC,EAAE;IACnD,IAAIY,KAAK,CAACV,IAAI,KAAKA,IAAI,EAAE;MACvB,OAAO,IAAI;IACb;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}