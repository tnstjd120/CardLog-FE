{"ast":null,"code":"var _jsxFileName = \"/Users/gwonsunseong/Desktop/Projects/react-project/side-project(Solo)/CardLog-FE/src/components/routes/index.tsx\";\nimport { Route, Routes } from \"react-router-dom\";\nimport RouterInfo from \"./RouterInfo\";\nimport PrivateRoute from \"./PrivateRouter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoutesObject = () => {\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: Object.entries(RouterInfo).map(_ref => {\n      let [key, item] = _ref;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: item.path,\n        element: item.isLoggedIn ? /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          children: item.element\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: item.element\n        }, void 0, false),\n        render: () => handleNavOnUpdate(item.isWithNav)\n      }, item.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = RoutesObject;\nexport default RoutesObject;\nvar _c;\n$RefreshReg$(_c, \"RoutesObject\");","map":{"version":3,"names":["Route","Routes","RouterInfo","PrivateRoute","RoutesObject","Object","entries","map","key","item","path","isLoggedIn","element","handleNavOnUpdate","isWithNav"],"sources":["/Users/gwonsunseong/Desktop/Projects/react-project/side-project(Solo)/CardLog-FE/src/components/routes/index.tsx"],"sourcesContent":["import { Route, Routes, useResolvedPath } from \"react-router-dom\";\nimport RouterInfo, { RouterItem } from \"./RouterInfo\";\nimport PrivateRoute from \"./PrivateRouter\";\n\nconst RoutesObject = (): JSX.Element => {\n  return (\n    <Routes>\n      {Object.entries(RouterInfo).map(([key, item]: [string, RouterItem]) => {\n        return (\n          <Route\n            key={item.path}\n            path={item.path}\n            element={\n              item.isLoggedIn ? (\n                <PrivateRoute>{item.element}</PrivateRoute>\n              ) : (\n                <>{item.element}</>\n              )\n            }\n            render={() => handleNavOnUpdate(item.isWithNav)}\n          />\n        );\n      })}\n    </Routes>\n  );\n};\n\nexport default RoutesObject;\n"],"mappings":";AAAA,SAASA,KAAK,EAAEC,MAAM,QAAyB,kBAAkB;AACjE,OAAOC,UAAU,MAAsB,cAAc;AACrD,OAAOC,YAAY,MAAM,iBAAiB;AAAC;AAAA;AAE3C,MAAMC,YAAY,GAAG,MAAmB;EACtC,oBACE,QAAC,MAAM;IAAA,UACJC,MAAM,CAACC,OAAO,CAACJ,UAAU,CAAC,CAACK,GAAG,CAAC,QAAuC;MAAA,IAAtC,CAACC,GAAG,EAAEC,IAAI,CAAuB;MAChE,oBACE,QAAC,KAAK;QAEJ,IAAI,EAAEA,IAAI,CAACC,IAAK;QAChB,OAAO,EACLD,IAAI,CAACE,UAAU,gBACb,QAAC,YAAY;UAAA,UAAEF,IAAI,CAACG;QAAO;UAAA;UAAA;UAAA;QAAA,QAAgB,gBAE3C;UAAA,UAAGH,IAAI,CAACG;QAAO,iBAElB;QACD,MAAM,EAAE,MAAMC,iBAAiB,CAACJ,IAAI,CAACK,SAAS;MAAE,GAT3CL,IAAI,CAACC,IAAI;QAAA;QAAA;QAAA;MAAA,QAUd;IAEN,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACK;AAEb,CAAC;AAAC,KArBIN,YAAY;AAuBlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}