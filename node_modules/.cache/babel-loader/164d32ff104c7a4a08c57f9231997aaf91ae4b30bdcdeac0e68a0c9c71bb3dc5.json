{"ast":null,"code":"import RouterInfo from \"../components/routes/RouterInfo\";\nexport const useHasNav = path => {\n  // 혹시 이 부분을 보고 계신 분이 있을진 모르겠지만 좀 더 컴팩트한 방법을 생각 중 입니다...\n  const pathArr = path.split(\"/\");\n  if (pathArr.length > 2) {\n    if (pathArr[1] === \"posts\") return true;\n  }\n  for (let [key, value] of Object.entries(RouterInfo)) {\n    if (value.path === path) return value.isWithNav;\n  }\n  return true;\n};","map":{"version":3,"names":["RouterInfo","useHasNav","path","pathArr","split","length","key","value","Object","entries","isWithNav"],"sources":["/Users/gwonsunseong/Desktop/Projects/react-project/side-project(Solo)/CardLog-FE/src/hooks/useHasNav.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport RouterInfo from \"../components/routes/RouterInfo\";\n\nexport const useHasNav = (path: string): boolean => {\n  // 혹시 이 부분을 보고 계신 분이 있을진 모르겠지만 좀 더 컴팩트한 방법을 생각 중 입니다...\n  const pathArr = path.split(\"/\");\n  if (pathArr.length > 2) {\n    if (pathArr[1] === \"posts\") return true;\n  }\n\n  for (let [key, value] of Object.entries(RouterInfo)) {\n    if (value.path === path) return value.isWithNav;\n  }\n\n  return true;\n};\n"],"mappings":"AACA,OAAOA,UAAU,MAAM,iCAAiC;AAExD,OAAO,MAAMC,SAAS,GAAIC,IAAY,IAAc;EAClD;EACA,MAAMC,OAAO,GAAGD,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC;EAC/B,IAAID,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE;IACtB,IAAIF,OAAO,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE,OAAO,IAAI;EACzC;EAEA,KAAK,IAAI,CAACG,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACT,UAAU,CAAC,EAAE;IACnD,IAAIO,KAAK,CAACL,IAAI,KAAKA,IAAI,EAAE,OAAOK,KAAK,CAACG,SAAS;EACjD;EAEA,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}