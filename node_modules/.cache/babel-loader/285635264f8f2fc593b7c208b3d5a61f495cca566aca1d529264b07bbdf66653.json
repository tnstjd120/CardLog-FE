{"ast":null,"code":"var _jsxFileName = \"/Users/gwonsunseong/Desktop/Projects/react-project/side-project(Solo)/CardLog-FE/src/components/common/Button/index.tsx\";\n/** @jsxImportSource @emotion/react */\nimport React from \"react\";\nimport theme from \"styles/theme\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    themeType,\n    children,\n    icon,\n    css,\n    marginRight = 0,\n    size = \"md\",\n    isBorder = false,\n    onClick\n  } = _ref;\n  const buttonStyle = css`\n    font-size: 1rem;\n    border: 0;\n    background-color: ${themeType && theme[themeType].backgroundColor};\n    color: ${themeType && theme[themeType].color};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    ${css}\n  `;\n  return _jsxDEV(_Fragment, {\n    children: _jsxDEV(\"button\", {\n      css: buttonStyle,\n      onClick: onClick,\n      children: [icon && icon, children && children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","theme","Button","themeType","children","icon","css","marginRight","size","isBorder","onClick","buttonStyle","backgroundColor","color"],"sources":["/Users/gwonsunseong/Desktop/Projects/react-project/side-project(Solo)/CardLog-FE/src/components/common/Button/index.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport React from \"react\";\nimport { css } from \"@emotion/react\";\nimport { ThemeType } from \"styles/emotion\";\nimport theme from \"styles/theme\";\n\nexport interface ButtonProps {\n  css?: string;\n  themeType?: ThemeType;\n  children?: string | React.ReactElement;\n  icon?: React.ReactElement;\n  marginRight?: string;\n  size?: \"sm\" | \"md\" | \"lg\";\n  isBorder?: boolean;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  themeType,\n  children,\n  icon,\n  css,\n  marginRight = 0,\n  size = \"md\",\n  isBorder = false,\n  onClick,\n}) => {\n  const buttonStyle = css`\n    font-size: 1rem;\n    border: 0;\n    background-color: ${themeType && theme[themeType].backgroundColor};\n    color: ${themeType && theme[themeType].color};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    ${css}\n  `;\n\n  return (\n    <>\n      <button css={buttonStyle} onClick={onClick}>\n        {icon && icon}\n        {children && children}\n      </button>\n    </>\n  );\n};\n\nexport default Button;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAGzB,OAAOC,KAAK,MAAM,cAAc;AAAC;AAAA;AAajC,MAAMC,MAA6B,GAAG,QAShC;EAAA,IATiC;IACrCC,SAAS;IACTC,QAAQ;IACRC,IAAI;IACJC,GAAG;IACHC,WAAW,GAAG,CAAC;IACfC,IAAI,GAAG,IAAI;IACXC,QAAQ,GAAG,KAAK;IAChBC;EACF,CAAC;EACC,MAAMC,WAAW,GAAGL,GAAI;AAC1B;AACA;AACA,wBAAwBH,SAAS,IAAIF,KAAK,CAACE,SAAS,CAAC,CAACS,eAAgB;AACtE,aAAaT,SAAS,IAAIF,KAAK,CAACE,SAAS,CAAC,CAACU,KAAM;AACjD;AACA;AACA;AACA;AACA,MAAMP,GAAI;AACV,GAAG;EAED,OACE;IAAA,UACE;MAAQ,GAAG,EAAEK,WAAY;MAAC,OAAO,EAAED,OAAQ;MAAA,WACxCL,IAAI,IAAIA,IAAI,EACZD,QAAQ,IAAIA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA;EACd,iBACR;AAEP,CAAC;AAAC,KA9BIF,MAA6B;AAgCnC,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}