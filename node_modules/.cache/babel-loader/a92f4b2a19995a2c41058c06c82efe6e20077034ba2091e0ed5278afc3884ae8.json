{"ast":null,"code":"var _jsxFileName = \"/Users/gwonsunseong/Desktop/Projects/react-project/side-project(Solo)/CardLog-FE/src/components/common/Button/index.tsx\";\n/** @jsxImportSource @emotion/react */\nimport React from \"react\";\nimport { css } from \"@emotion/react\";\nimport theme from \"styles/theme\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    themeType,\n    children,\n    marginRight = 0,\n    size = \"md\",\n    isBorder = false,\n    onClick\n  } = _ref;\n  const buttonStyle = css`\n    font-size: 20px;\n    border: 0;\n    background-color: ${theme[themeType].backgroundColor};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #fff;\n    cursor: pointer;\n  `;\n  console.log(typeof children);\n  return _jsxDEV(_Fragment, {\n    children: _jsxDEV(\"button\", {\n      css: buttonStyle,\n      onClick: onClick,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","css","theme","Button","themeType","children","marginRight","size","isBorder","onClick","buttonStyle","backgroundColor","console","log"],"sources":["/Users/gwonsunseong/Desktop/Projects/react-project/side-project(Solo)/CardLog-FE/src/components/common/Button/index.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport React from \"react\";\nimport { css } from \"@emotion/react\";\nimport { ThemeType } from \"styles/emotion\";\nimport theme from \"styles/theme\";\n\ninterface ButtonProps {\n  themeType: ThemeType;\n  children: React.ReactElement | string;\n  marginRight?: string;\n  size?: \"sm\" | \"md\" | \"lg\";\n  isBorder?: boolean;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  themeType,\n  children,\n  marginRight = 0,\n  size = \"md\",\n  isBorder = false,\n  onClick,\n}) => {\n  const buttonStyle = css`\n    font-size: 20px;\n    border: 0;\n    background-color: ${theme[themeType].backgroundColor};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #fff;\n    cursor: pointer;\n  `;\n\n  console.log(typeof children);\n\n  return (\n    <>\n      <button css={buttonStyle} onClick={onClick}>\n        {children}\n      </button>\n    </>\n  );\n};\n\nexport default Button;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,gBAAgB;AAEpC,OAAOC,KAAK,MAAM,cAAc;AAAC;AAAA;AAWjC,MAAMC,MAA6B,GAAG,QAOhC;EAAA,IAPiC;IACrCC,SAAS;IACTC,QAAQ;IACRC,WAAW,GAAG,CAAC;IACfC,IAAI,GAAG,IAAI;IACXC,QAAQ,GAAG,KAAK;IAChBC;EACF,CAAC;EACC,MAAMC,WAAW,GAAGT,GAAI;AAC1B;AACA;AACA,wBAAwBC,KAAK,CAACE,SAAS,CAAC,CAACO,eAAgB;AACzD;AACA;AACA;AACA;AACA;AACA,GAAG;EAEDC,OAAO,CAACC,GAAG,CAAC,OAAOR,QAAQ,CAAC;EAE5B,OACE;IAAA,UACE;MAAQ,GAAG,EAAEK,WAAY;MAAC,OAAO,EAAED,OAAQ;MAAA,UACxCJ;IAAQ;MAAA;MAAA;MAAA;IAAA;EACF,iBACR;AAEP,CAAC;AAAC,KA5BIF,MAA6B;AA8BnC,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}