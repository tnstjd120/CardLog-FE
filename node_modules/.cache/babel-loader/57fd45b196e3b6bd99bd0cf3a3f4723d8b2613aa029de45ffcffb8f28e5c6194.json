{"ast":null,"code":"var _jsxFileName = \"/Users/gwonsunseong/Desktop/Projects/react-project/side-project(Solo)/CardLog-FE/src/components/common/Button/index.tsx\";\n/** @jsxImportSource @emotion/react */\nimport React from \"react\";\nimport { css } from \"@emotion/react\";\nimport theme from \"styles/theme\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    themeType,\n    children,\n    type = \"button\",\n    icon,\n    marginRight = 0,\n    size = \"md\",\n    isBorder = false,\n    customCss = \"\",\n    onClick\n  } = _ref;\n  return _jsxDEV(_Fragment, {\n    children: _jsxDEV(\"button\", {\n      css: css`\n          font-size: 1rem;\n          border: 0;\n          background-color: ${themeType && theme[themeType].backgroundColor};\n          color: ${themeType && theme[themeType].color};\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          cursor: pointer;\n          transition: 0.3s;\n          ${customCss}\n        `,\n      onClick: onClick,\n      children: [icon && icon, children && children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","css","theme","Button","themeType","children","type","icon","marginRight","size","isBorder","customCss","onClick","backgroundColor","color"],"sources":["/Users/gwonsunseong/Desktop/Projects/react-project/side-project(Solo)/CardLog-FE/src/components/common/Button/index.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport React from \"react\";\nimport { css, SerializedStyles } from \"@emotion/react\";\nimport { ThemeType } from \"styles/emotion\";\nimport theme from \"styles/theme\";\n\nexport interface ButtonProps {\n  themeType?: ThemeType;\n  children?: string | React.ReactElement;\n  type?: string;\n  icon?: React.ReactElement;\n  marginRight?: string;\n  size?: \"sm\" | \"md\" | \"lg\";\n  isBorder?: boolean;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  customCss?: SerializedStyles;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  themeType,\n  children,\n  type = \"button\",\n  icon,\n  marginRight = 0,\n  size = \"md\",\n  isBorder = false,\n  customCss = \"\",\n  onClick,\n}) => {\n  return (\n    <>\n      <button\n        css={css`\n          font-size: 1rem;\n          border: 0;\n          background-color: ${themeType && theme[themeType].backgroundColor};\n          color: ${themeType && theme[themeType].color};\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          cursor: pointer;\n          transition: 0.3s;\n          ${customCss}\n        `}\n        onClick={onClick}\n      >\n        {icon && icon}\n        {children && children}\n      </button>\n    </>\n  );\n};\n\nexport default Button;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAA0B,gBAAgB;AAEtD,OAAOC,KAAK,MAAM,cAAc;AAAC;AAAA;AAcjC,MAAMC,MAA6B,GAAG,QAUhC;EAAA,IAViC;IACrCC,SAAS;IACTC,QAAQ;IACRC,IAAI,GAAG,QAAQ;IACfC,IAAI;IACJC,WAAW,GAAG,CAAC;IACfC,IAAI,GAAG,IAAI;IACXC,QAAQ,GAAG,KAAK;IAChBC,SAAS,GAAG,EAAE;IACdC;EACF,CAAC;EACC,OACE;IAAA,UACE;MACE,GAAG,EAAEX,GAAI;AACjB;AACA;AACA,8BAA8BG,SAAS,IAAIF,KAAK,CAACE,SAAS,CAAC,CAACS,eAAgB;AAC5E,mBAAmBT,SAAS,IAAIF,KAAK,CAACE,SAAS,CAAC,CAACU,KAAM;AACvD;AACA;AACA;AACA;AACA;AACA,YAAYH,SAAU;AACtB,SAAU;MACF,OAAO,EAAEC,OAAQ;MAAA,WAEhBL,IAAI,IAAIA,IAAI,EACZF,QAAQ,IAAIA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA;EACd,iBACR;AAEP,CAAC;AAAC,KAjCIF,MAA6B;AAmCnC,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}